---
// Reset CSS
import "destyle.css/destyle.min.css";
// Fonts
import "@fontsource/noto-sans-jp/300.css";
import "@fontsource/noto-sans-jp/400.css";
import "@fontsource/noto-sans-jp/500.css";
import "@fontsource/noto-sans-jp/600.css";
import "@fontsource/noto-sans-jp/700.css";
import "@fontsource/noto-sans-jp/800.css";
import "@fontsource/noto-sans-jp/900.css";
import "@fontsource/montserrat/300.css";
import "@fontsource/montserrat/400.css";
import "@fontsource/montserrat/500.css";
import "@fontsource/montserrat/600.css";
import "@fontsource/montserrat/700.css";
import "@fontsource/montserrat/800.css";
import "@fontsource/montserrat/900.css";
// Code fonts
import "@fontsource/source-code-pro/400.css";
import "@fontsource/source-code-pro/400-italic.css";
import "@fontsource/source-code-pro/500.css";
import "@fontsource/source-code-pro/500-italic.css";
import "@fontsource/source-code-pro/600.css";
import "@fontsource/source-code-pro/600-italic.css";
import "@fontsource/source-code-pro/700.css";
import "@fontsource/source-code-pro/700-italic.css";
// Components
import Header from "../components/common/Header";
import Footer from "../components/common/Footer";
import Sidebar from "../components/common/Sidebar";
// View Transitions
import { ViewTransitions } from "astro:transitions";
import type { MarkdownHeading } from "astro";

interface Props {
	title: string;
	description: string;
	ogImage?: URL;
	headings?: MarkdownHeading[];
}
const { title, description, ogImage, headings } = Astro.props;
const ogImageUrl = ogImage ? ogImage : new URL("/siwl-logo.png", import.meta.env.APP_URL);
---

<!doctype html>
<html lang="ja">
	<head prefix="og: https://ogp.me/ns#">
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<meta name="og:site_name" content={import.meta.env.APP_NAME} />
		<meta property="og:type" content="website" />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:title" content={title} />
		<meta property="og:image" content={ogImageUrl} />

		<!-- Twitter OGP -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:site" content={import.meta.env.X_OWNER} />
		<meta name="twitter:creator" content={import.meta.env.X_OWNER} />

		<!--Scroll Bar -->
		<meta name="theme-color" media="(prefers-color-scheme: light)" content="#e4e8fa" />
		<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#141830" />

		<!--View Transitions-->
		<ViewTransitions />

		<!--noindex nofollow in /contact, privacy-policy-->
		{
			/^\/(contact|privacy-policy)$/.test(Astro.url.pathname) && (
				<>
					<meta name="robots" content="noindex" />
					<meta name="robots" content="nofollow" />
				</>
			)
		}

		<!-- Favicon -->
		<link rel="icon" href="/favicon.ico" sizes="32x32" />
		<link rel="icon" type="image/svg+xml" href="/siwl-logo.svg" />
		<link rel="apple-touch-icon" type="image/png" href="/siwl-logo.png" />

		<!--Sitemap -->
		<link rel="sitemap" href="/sitemap-index.xml" />

		<!-- Google tag (gtag.js) -->
		<script
			is:inline
			type="text/partytown"
			async
			src="https://www.googletagmanager.com/gtag/js?id=G-CYF55805ED"></script>

		<script is:inline type="text/partytown">
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag("js", new Date());

			gtag("config", "G-CYF55805ED");
		</script>

		<!--initialize theme -->
		<script is:inline>
			const initializeTheme = () => {
				const rootClass = document.documentElement.classList;
				const theme = window.localStorage.getItem("theme");
				if (theme && typeof theme === "string") {
					if (theme === "dark") {
						rootClass.add("dark");
						rootClass.remove("light");
					} else {
						rootClass.add("light");
						rootClass.remove("dark");
					}
				} else {
					if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
						rootClass.add("dark");
						rootClass.remove("light");
					} else {
						rootClass.add("light");
						rootClass.remove("dark");
					}
				}
			};
			initializeTheme();
			document.addEventListener("astro:after-swap", initializeTheme);
		</script>

		<!--title -->
		<title>{title}</title>
	</head>
	<body class="font-body max-w-screen overflow-x-clip scrollbar">
		<Header
			appName={import.meta.env.APP_NAME}
			currentPath={Astro.url.pathname}
			headings={headings}
			client:load
		/>
		<main
			id="content"
			class="bg-background text-foreground min-h-screen px-4 sm:px-24 lg:pl-[calc(4rem+3.95rem)] lg:pr-16 2xl:pl-[calc()]"
		>
			<slot />
		</main>
		<Footer currentPath={Astro.url.pathname} />

		<Sidebar
			appName={import.meta.env.APP_NAME}
			currentPath={Astro.url.pathname}
			xUrl={import.meta.env.X_URL}
			zennUrl={import.meta.env.ZENN_URL}
			githubUrl={import.meta.env.GITHUB_URL}
			client:load
		/>
	</body>
</html>

<!--main css -->
<style is:global lang="scss">
	html {
		scroll-behavior: smooth;
	}

	html.dark .astro-code,
	html.dark .astro-code span {
		color: var(--shiki-dark) !important;
		background-color: var(--shiki-dark-bg) !important;
		/* Optional, if you also want font styles */
		font-style: var(--shiki-dark-font-style) !important;
		font-weight: var(--shiki-dark-font-weight) !important;
		text-decoration: var(--shiki-dark-text-decoration) !important;
	}

	body {
		line-break: strict;
		word-break: break-word;
		overflow-wrap: break-word;
		word-wrap: break-word;
	}
</style>
