---
import ArticleHeadline from "../../../components/large/ArticleHeadline.astro";
import Toc from "../../../components/large/Toc";
import Base from "../../../layouts/Base.astro";
import { getCollection } from 'astro:content';
import ProfileCard from "../../../components/card/ProfileCard.astro";
// KaTeX CSS
import "katex/dist/katex.min.css";
import RenderedArticle from "../../../components/common/RenderedArticle.astro";

export const getStaticPaths = async () => {

  const articles = await getCollection("article");
  
  return articles.map((article) => ({
    params: { slug: article.slug }, 
    props: { article },
  }));

}

const { article } = Astro.props;
const { headings } = await article.render();
---
<Base title={`${article.data.title} | ${import.meta.env.APP_NAME}`} 
      description={article.data.description ?? ""} 
      ogImage={new URL(`/blog/thambnail/${article.slug}.png`, import.meta.env.APP_URL)}
>
  <section class="pt-8 w-full flex flex-col lg:flex-row">
    <article class="min-h-[calc(100dvh-8rem)] sm:min-h-0 flex flex-col gap-8 lg:w-[65%]">
      <ArticleHeadline slug={article.slug} data={article.data} />
      <div class="lg:hidden">
        <Toc headings={headings} client:visible />
      </div>
      <RenderedArticle body={article.body} />
    </article>
    <aside class="pt-16 lg:pt-0 flex flex-col gap-8 lg:w-[35%] lg:pl-[3.95rem] 2xl:pl-[5.925rem] 2xl:pr-[1.975rem]">
      <ProfileCard />
      <div class="lg:sticky lg:top-8 hidden lg:flex flex-col sm:gap-8">
        <Toc headings={headings} client:visible />
      </div>
    </aside>
  </section>
</Base>