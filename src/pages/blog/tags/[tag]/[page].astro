---
import Base from "../../../../layouts/Base.astro";
import { type GetStaticPathsOptions } from "astro";
import { getCollection } from "astro:content";
import ArticleCardsPanel from "../../../../components/large/ArticleCardsPanel.astro";
import Breadcrumbs from "../../../../components/common/Breadcrumbs.astro";
import ProfileCard from "../../../../components/card/ProfileCard.astro";
import TagCardsPanel from "../../../../components/large/TagCardsPanel";
import CategoriesPanel from "../../../../components/large/CategoriesPanel";
import { AllowedRoutes } from "../../../../route";
import Pager from "../../../../components/button/Pager";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
	const tags = await getCollection("tag", ({ data }) => {
		return import.meta.env.PROD ? data.isDraft === false : true;
	});
	const articles = await getCollection("article", ({ data }) => {
		return import.meta.env.PROD ? data.isDraft === false : true;
	});

	const routes = tags.flatMap((tag) => {
		const filteredArticles = articles
			.filter(({ data }) => {
				return data.tags && data.tags.length > 0 && data.tags.map(({ id }) => id).includes(tag.id);
			})
			.sort((a, b) => {
				return b.data.publishDate.getTime() - a.data.publishDate.getTime();
			});

		return paginate(filteredArticles, {
			params: { tag: tag.id },
			pageSize: 10,
			props: { tag: tag },
		});
	});
	return routes;
};

const { page, tag } = Astro.props;

const route = new AllowedRoutes(Astro.url.pathname);
const { meta } = route.getSubsetPageMeta();
---

<Base
	title={`${meta.name} | ${tag.data.name} | ${import.meta.env.APP_NAME}`}
	description=`${meta.description}`
>
	<section class="pt-8 w-full flex flex-col lg:flex-row">
		<article class="min-h-[calc(100dvh-8rem)] sm:min-h-0 flex flex-col gap-8 lg:w-[65%]">
			<Breadcrumbs count={page.data.length} tag={tag} />
			<ArticleCardsPanel articles={page.data} />
			<Pager page={page} />
		</article>
		<aside
			class="pt-16 lg:pt-0 flex flex-col sm:gap-8 lg:w-[35%] lg:pl-[3.95rem] 2xl:pl-[5.925rem] 2xl:pr-[1.975rem]"
		>
			<ProfileCard />
			<div class="lg:sticky lg:top-8 flex flex-col sm:gap-8">
				<CategoriesPanel client:visible />
				<TagCardsPanel currentPath={Astro.url.pathname} client:visible />
			</div>
		</aside>
	</section>
</Base>
