---
import Base from "../../../../layouts/Base.astro";
import { type GetStaticPathsOptions } from "astro";
import { getCollection } from "astro:content";
import ArticleCardsPanel from "../../../../components/large/ArticleCardsPanel.astro";
import Breadcrumbs from "../../../../components/common/Breadcrumbs.astro";
import ProfileCard from "../../../../components/card/ProfileCard.astro";
import NewsCard from "../../../../components/card/NewsCard.astro";
import TagCardsPanel from "../../../../components/large/TagCardsPanel";
import CategoriesPanel from "../../../../components/large/CategoriesPanel";
import { AllowedRoutes } from "../../../../utils/common/route";

export const getStaticPaths = (async ({ paginate }: GetStaticPathsOptions) => {

  const categories = await getCollection("category");
  const articles = await getCollection("article", ({ data }) => {
    return import.meta.env.PROD ? data.isDraft === false : true;
  });

  const routes = categories.flatMap((category) => {
		const filteredArticles = articles.filter(({ data }) => {
			return (
      data.category.id === category.id
			);
		});
		return paginate(filteredArticles, {
			params: { category: category.id },
			pageSize: 10,
			props: { category: category },
		});
	});
	return routes;
});

const { page, category } = Astro.props;

const routes = new AllowedRoutes(Astro.url.pathname);
const { name, description } = routes.getRootPageMeta();
---

<Base title={`${name} | ${category.data.name} | ${import.meta.env.APP_NAME}`} description=`${description}`>
  <section class="pt-8 w-full flex flex-col lg:flex-row">
    <article class="flex flex-col gap-8 lg:w-[65%]">
      <Breadcrumbs count={page.data.length} />
      <ArticleCardsPanel articles={page.data} />
    </article>
    <aside class="pt-16 lg:pt-0 lg:sticky lg:top-0 flex flex-col sm:gap-8 lg:w-[35%] lg:pl-[3.95rem] 2xl:pl-[5.925rem] 2xl:pr-[1.975rem]">
      <ProfileCard />
      <NewsCard />
      <CategoriesPanel client:visible />
      <TagCardsPanel client:visible />
    </aside>
	</section>
</Base>