---
import Base from "../layouts/Base.astro";
import { AllowedRoutes } from "../route";
import Breadcrumbs from "../components/common/Breadcrumbs.astro";
import { Image } from "astro:assets";
import ProfileImage from "../assets/images/profile-image.jpg";
import { SiGithub, SiMoleculer } from "solid-icons/si";
import { ImLink } from "solid-icons/im";
import { IoLogoRss } from "solid-icons/io";

import IconTS from "../content/tag/icons/typescript.svg";
import IconReact from "../content/tag/icons/react.svg";
import IconVue from "../content/tag/icons/vue.svg";
import IconAstro from "../content/tag/icons/astro.svg";
import IconPython from "../content/tag/icons/python.svg";
import IconBash from "../content/tag/icons/bash.svg";
import IconTailwind from "../content/tag/icons/tailwindcss.svg";
import IconNodejs from "../content/tag/icons/nodejs.svg";

import { getCollection } from "astro:content";

import WorkCard from "../components/card/WorkCard";
import MacintoshInterfaceCard from "../components/card/MacintoshInterfaceCard";
import GitHubContributionsCard from "../components/card/GitHubContributionsCard";
import { IoDesktopOutline } from "solid-icons/io";
import { ImHeadphones } from "solid-icons/im";

const works = await getCollection("work", ({ data }) => {
	return import.meta.env.PROD ? !data.isDraft : true;
});

const achievements = await getCollection("achievement", ({ data }) => {
	return import.meta.env.PROD ? !data.isDraft : true;
});

const routes = new AllowedRoutes(Astro.url.pathname);
const { meta } = routes.getSubsetPageMeta();

// GitHub GraphQL API をたたく
const today = new Date();
const to = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59, 59).toISOString();
const fromDate = new Date(today);
fromDate.setFullYear(fromDate.getFullYear() - 1);
fromDate.setDate(fromDate.getDate() + 2);
fromDate.setHours(0, 0, 0, 0);
const from = fromDate.toISOString();

const response = await fetch("https://api.github.com/graphql", {
  method: "POST",
  headers: { 
		"Content-Type": "application/json",
    "Authorization": `Bearer ${import.meta.env.GITHUB_ACCESS_TOKEN}` 
	},
  body: JSON.stringify({
		query: `
			query($userName:String!, $from: DateTime!, $to: DateTime!) {
				user(login: $userName){
					contributionsCollection(from: $from, to: $to) {
						contributionCalendar {
							totalContributions
							weeks {
								contributionDays {
									contributionCount
									date
								}
							}
						}
					}
				}
			}
		`,
		variables: {
			userName: import.meta.env.GITHUB_USERNAME,
			from: from,
			to: to,
		},
	}),
});

const gitHubContributions = await response.json();
const gitHubCalendar = gitHubContributions.data.user.contributionsCollection.contributionCalendar;

const whoami = {
	contentType: "whoami",
	title: import.meta.env.APP_OWNER,
	role: import.meta.env.APP_OWNER_ROLE,
	description:
		"計算化学の大学院生です。分子動力学 (MD) シミュレーションや機械学習の技術を用いて、機能性材料の物性予測や新奇材料の探索を行っています。モダンな Web フロントエンド開発もたまにやったりしています。",
};

const skills = {
	contentType: "skills",
	title: "Skills",
	list: [
		{ name: "TypeScript", link: "https://www.typescriptlang.org/", icon: IconTS },
		{ name: "Vue.js", link: "https://ja.vuejs.org/", icon: IconVue },
		{ name: "Tailwind CSS", link: "https://tailwindcss.com/", icon: IconTailwind },
		{ name: "Astro", link: "https://astro.build/", icon: IconAstro },
		{ name: "Node.js", link: "https://nodejs.org/ja/", icon: IconNodejs },
		{ name: "Python", link: "https://www.python.org/", icon: IconPython },
		{ name: "Bash", link: "https://www.gnu.org/software/bash/", icon: IconBash },
	],
};

const major = {
	contentType: "major",
	title: "Computational Chemistry",
	description:
		"分子動力学 (MD) シミュレーションや機械学習を用いて、卓越した電子的性質を示す有機半導体材料の探索に取り組んでいます。",
};

const tech = {
	contentType: "tech",
	title: "Web Frontend Development",
	description:
		"Vue.js やメタフレームワークによる Web アプリケーションの UI 開発や静的 Web サイト構築をやっています。最近は Astro を好んで使います。",
};

const interest = {
	contentType: "interest",
	title: "Indies Electronic Music",
	description:
		"インディーズの電子音楽をしょっちゅう聴いています。最近は聴くだけでなく、DJ コントローラーで MIX するなどして遊んでいます。",
};
---

<Base title={`${meta.name} | ${import.meta.env.APP_NAME}`} description=`${meta.description}`>
	<section class="flex flex-col gap-8 xl:gap-16 index-gradient py-8 px-4 md:px-8 lg:px-12 2xl:px-48 w-[calc(100%+2rem)] sm:w-[calc(100%+12rem)] lg:w-[calc(100%+8rem)] mx-[-1rem] sm:mx-[-6rem] lg:mx-[-4rem]">
		<Breadcrumbs />
		<h2 class="text-metalic-light dark:text-metalic-dark text-center font-extrabold text-4xl lg:text-6xl tracking-wide">Who am I?</h2>
		<MacintoshInterfaceCard title="$ whoami">
			<div class="flex flex-col xl:flex-row xl:justify-between gap-8 xl:gap-16">
				<div class="w-full xl:w-1/2">
					<div class="w-full flex items-center gap-4">
						<div class="w-16 h-16 lg:w-28 lg:h-28 2xl:w-36 2xl:h-36">
							<Image
								src={ProfileImage}
								alt="Profile Image"
								class="w-full h-full object-cover rounded-full"
							/>
						</div>
						<div class="w-2/3 flex flex-col gap-2">
							<h3 class="font-bold text-2xl lg:text-5xl 2xl:text-6xl">
								{whoami.title}
							</h3>
							<span class="text-[0.6rem] md:text-xs lg:text-sm 2xl:text-lg">{whoami.role}</span>
						</div>
					</div>
					<p class="tracking-wide sm:text-[1.125rem] lg:text-[1.25rem] mt-4 text-muted-foreground">{whoami.description}</p>
				</div>
				<GitHubContributionsCard calendar={gitHubCalendar} githubUsername={import.meta.env.GITHUB_USERNAME} githubUrl={import.meta.env.GITHUB_URL} />
			</div>
		</MacintoshInterfaceCard>
		<h2 class="text-metalic-light dark:text-metalic-dark text-center font-extrabold text-4xl lg:text-6xl tracking-wide">Profile</h2>
		<div class="flex flex-col lg:flex-row lg:justify-around gap-8">
			<MacintoshInterfaceCard title={`$ cat ${major.contentType}.dat`}>
				<div class="flex items-center gap-4">
					<SiMoleculer size="2rem" />
					<h3 class="font-bold text-lg lg:text-xl xl:text-2xl">
						{major.title}
					</h3>
				</div>
				<p class="tracking-wide sm:text-[1.125rem] lg:text-[1.25rem] mt-4 text-muted-foreground">{major.description}</p>
			</MacintoshInterfaceCard>
			<MacintoshInterfaceCard title={`$ cat ${tech.contentType}.dat`}>
				<div class="flex items-center gap-4">
					<IoDesktopOutline size="2rem" />
					<h3 class="font-bold text-lg lg:text-xl xl:text-2xl">
						{tech.title}
					</h3>
				</div>
				<p class="tracking-wide sm:text-[1.125rem] lg:text-[1.25rem] mt-4 text-muted-foreground">{tech.description}</p>
			</MacintoshInterfaceCard>
			<MacintoshInterfaceCard title={`$ cat ${interest.contentType}.dat`}>
				<div class="flex items-center gap-4">
					<ImHeadphones size="2rem" />
					<h3 class="font-bold text-lg lg:text-xl xl:text-2xl">
						{interest.title}
					</h3>
				</div>
				<p class="tracking-wide sm:text-[1.125rem] lg:text-[1.25rem] mt-4 text-muted-foreground">{interest.description}</p>
			</MacintoshInterfaceCard>
		</div>
		<h2 class="text-metalic-light dark:text-metalic-dark text-center font-extrabold text-4xl lg:text-6xl tracking-wide">Recent Works</h2>
	</section>
</Base>
