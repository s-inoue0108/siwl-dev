---
import { type CollectionEntry } from "astro:content";
import TagCard from "./TagCard.astro";
import { IoGitCommit, IoTimer, IoDesktopOutline, IoBulbOutline } from "solid-icons/io";
import ArticleCardLayerButton from "../button/ArticleCardLayerButton";
import { getEntry } from "astro:content";

interface Props {
	article: CollectionEntry<"article">;
}

const { article } = Astro.props;
const { slug, data } = article;

const category = await getEntry("category", data.category.id);
---

<section id={`article-card-${slug}`}>
	<div class="flex flex-col sm:flex-row gap-2">
		<a href={`/blog/articles/${slug}`} class=`sm:w-64 h-36 hover:opacity-80 transition-opacity duration-150 rounded-md ${data.category.id === "tech" ? "bg-accent-base" : "bg-accent-sub-base"}`>
			<div class="relative w-full h-full p-6">
				{
					<div class="opacity-70 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 flex sm:flex-col items-center gap-4 lg:gap-2">
						<span class="text-4xl lg:text-4xl">{category.id === "tech" ? <IoDesktopOutline /> : <IoBulbOutline />}</span>
						<span class="text-3xl lg:text-2xl font-semibold whitespace-nowrap">{category.data.name}</span>
					</div>
				}
			</div>
		</a>
		<div class="w-full flex flex-col border-b-2 border-muted-background">
			<div class="relative h-32 sm:h-full">
				<div id={`article-card-${slug}-tags`} class="absolute bg-background" style="opacity: 0;">
					<ul class="flex flex-wrap gap-2 lg:gap-4 px-2 lg:py-2">
						{data.tags &&
							data.tags.map(({ id }) => (
								<li>
									<TagCard id={id} />
								</li>
							))}
					</ul>
				</div>
				<div id={`article-card-${slug}-description`} class="absolute bg-background">
					<a href={`/blog/articles/${slug}`} class=`${data.category.id === "tech" ? "hover:text-accent-base" : "hover:text-accent-sub-base"} transition-colors duration-150`>
						<h1 class="font-extrabold text-xl lg:text-2xl px-2 lg:py-2 overflow-clip" transition:name={`title-${article.slug}`}>
							{data.title}
						</h1>
					</a>
				</div>
			</div>
			<div class="flex justify-between items-end">
				<ul class="flex items-center gap-4 pl-2 pb-1">
					<a href={`/blog/archive/${data.publishDate.getFullYear()}-${data.publishDate.getMonth() + 1}`} class="text-muted-foreground inline-flex items-center gap-1 font-semibold text-[0.8rem] sm:text-[1.2rem]">
						<IoGitCommit class="rotate-90" />
						<time
							datetime={data.publishDate.toISOString()}
							class="text-xs sm:text-sm tracking-wider"
						>
							{data.publishDate.toLocaleDateString("ja-JP", {
								year: "numeric",
								month: "2-digit",
								day: "2-digit",
							})}
						</time>
					</a>
					<li class="text-muted-foreground inline-flex items-center gap-1 font-semibold text-[0.8rem] sm:text-[1.2rem]">
						<IoTimer />
						<p class="text-xs sm:text-sm tracking-wider">{`${10} min`}</p>
					</li>
				</ul>
				<ArticleCardLayerButton article={article} client:load />
			</div>
		</div>
	</div>
</section>
