---
import { type CollectionEntry } from "astro:content";
import { IoNewspaper } from "solid-icons/io";
import NoItem from "../common/NoItem.astro";
import { getEntries } from "astro:content";
import ArticleCardsPanel from "./ArticleCardsPanel.astro";

interface Props {
	relatedArticles: CollectionEntry<"article">["data"]["relatedArticles"];
}

const { relatedArticles } = Astro.props;

const getRelatedArticles = async (
	relatedArticles: Props["relatedArticles"]
): Promise<CollectionEntry<"article">[]> => {
	if (!relatedArticles) return [];
	const articles = await getEntries(relatedArticles);
	return articles.filter(({ data }) => data.isDraft === false);
};

const articles = await getRelatedArticles(relatedArticles);
---

<>
	<svg width="0" height="0">
		<linearGradient id="gradient" x1="100%" y1="100%" x2="0%" y2="0%">
			<stop stop-color="rgba(var(--accent-sub-base), var(--opacity))" offset="0%"></stop>
			<stop stop-color="rgba(var(--accent-base), var(--opacity))" offset="100%"></stop>
		</linearGradient>
	</svg>
	<h2
		id="h2-related-articles"
		class="w-full overflow-x-auto mt-12 mb-4 lg:mt-24 lg:mb-8 text-[24px] lg:text-[30px] 2xl:text-[36px] font-bold flex items-center gap-2 pb-2 border-b border-muted-background"
	>
		<div class="flex items-center gap-3">
			<a href="#h2-related-articles" class="heading min-w-max whitespace-nowrap">
				<IoNewspaper style={{ fill: "url(#gradient)" }} />
			</a>
			Related Articles
		</div>
	</h2>
	<section class="mt-8 mb-16 lg:mt-16 lg:mb-32">
		{
			articles && articles.length > 0 ? (
				<ArticleCardsPanel articles={articles} />
			) : (
				<NoItem message="記事がありません" />
			)
		}
	</section>
</>
