---
import { type CollectionEntry, getEntry, getEntries } from "astro:content";
import { IoGitMerge, IoGitCommit, IoTimer } from "solid-icons/io";
import ClassifyCard from "../card/ClassifyCard.astro";
import { getReadingTime } from "../../utils/common/getreadingtime";

interface Props {
	data: CollectionEntry<"article">["data"];
	body: CollectionEntry<"article">["body"];
}

const { data, body } = Astro.props;

const category = await getEntry("category", data.category.id);
const tags = await getEntries(data.tags ? data.tags : []);

const readingTime = getReadingTime(body);
---

<section>
	<div
		class={`border-l-[12px] ${category.id === "tech" ? "border-accent-sub-base" : "border-accent-base"} px-4 lg:px-6 -mx-4 sm:w-full sm:mx-0`}
	>
		<!-- <h1
			class="text-[1.5rem] sm:text-[1.875rem] lg:text-[2.25rem] 2xl:text-[3rem] tracking-wide xl:leading-relaxed font-bold"
			transition:name={`title-${slug}`}
		> -->
		<h1
			class="text-[1.5rem] sm:text-[1.875rem] lg:text-[2.25rem] 2xl:text-[3rem] tracking-wide xl:leading-relaxed font-bold"
		>
			{data.title}
		</h1>
		<ul class="flex items-center gap-4 lg:gap-6 pt-4 sm:pt-8">
			<a
				href={`/blog/archives/${data.publishDate.getFullYear()}-${`${data.publishDate.getMonth() + 1}`.padStart(2, "0")}`}
				class="text-muted-foreground inline-flex items-center gap-1 hover:opacity-70 transition-opacity duration-150"
			>
				<IoGitCommit class="rotate-90" />
				<time
					datetime={data.publishDate.toISOString()}
					class="tracking-wide text-sm lg:text-lg font-semibold"
				>
					{
						data.publishDate.toLocaleDateString("ja-JP", {
							year: "numeric",
							month: "2-digit",
							day: "2-digit",
						})
					}
				</time>
			</a>
			{
				data.updateDate && (
					<li class="text-muted-foreground inline-flex items-center gap-1">
						<IoGitMerge />
						<time
							datetime={data.updateDate.toISOString()}
							class="tracking-wide text-sm lg:text-lg font-semibold"
						>
							{data.updateDate.toLocaleDateString("ja-JP", {
								year: "numeric",
								month: "2-digit",
								day: "2-digit",
							})}
						</time>
					</li>
				)
			}
			<li class="text-muted-foreground inline-flex items-center gap-1">
				<IoTimer />
				<p class="tracking-wide text-sm lg:text-lg font-semibold">{readingTime}</p>
			</li>
		</ul>
	</div>
	<ul class="inline-flex flex-wrap items-center gap-2 pt-8 lg:pt-12">
		<li>
			<ClassifyCard collection={category} />
		</li>
		{
			tags &&
				tags.map((tag) => (
					<li>
						<ClassifyCard collection={tag} />
					</li>
				))
		}
	</ul>
	<p
		class="pt-4 text-muted-foreground font-medium tracking-wide leading-relaxed 2xl:leading-loose lg:text-[1.125rem] xl:text-[1.25rem]"
	>
		{data.description}
	</p>
</section>
