---
import { type CollectionEntry, getEntry, getEntries } from "astro:content";
import { IoGitMerge, IoGitCommit, IoTimerOutline, IoDesktopOutline, IoBulbOutline } from "solid-icons/io";
import ClassifyCard from "../card/ClassifyCard.astro";
interface Props {
  slug: CollectionEntry<"article">["slug"];
  data: CollectionEntry<"article">["data"];
}

const { slug, data } = Astro.props;

const category = await getEntry("category", data.category.id);
const tags = await getEntries(data.tags ? data.tags : []);
---

<section>
  <div class={`border-l-[12px] ${category.id === "tech" ? "border-accent-sub-base" : "border-accent-base"} px-4 lg:px-6 -mx-4 sm:w-full sm:mx-0`}>
    <h1 class="text-2xl sm:text-3xl lg:text-4xl 2xl:text-5xl tracking-wide font-bold" transition:name={`title-${slug}`}>
      {data.title}
    </h1>
    <ul class="flex items-center gap-4 pt-4 sm:pt-8">
      <a href={`/blog/archives/${data.publishDate.getFullYear()}-${data.publishDate.getMonth() + 1}`} 
        class="text-muted-foreground inline-flex items-center gap-1 lg:gap-2">
        <IoGitCommit class="rotate-90" />
        <time
          datetime={data.publishDate.toISOString()}
          class="text-sm lg:text-lg font-semibold"
        >
          {data.publishDate.toLocaleDateString("ja-JP", {
            year: "numeric",
            month: "2-digit",
            day: "2-digit",
          })}
        </time>
      </a>
      {
        data.updateDate && (
          <li class="text-muted-foreground inline-flex items-center gap-1 lg:gap-2">
            <IoGitMerge />
            <time
              datetime={data.updateDate.toISOString()}
              class="text-sm lg:text-lg font-semibold"
            >
              {data.updateDate.toLocaleDateString("ja-JP", {
                year: "numeric",
                month: "2-digit",
                day: "2-digit",
              })}
            </time>
          </li>
        )
      }
      <li class="text-muted-foreground inline-flex items-center gap-1 lg:gap-2">
        <IoTimerOutline />
        <p class="text-sm lg:text-lg font-semibold">{`${10} min`}</p>
      </li>
    </ul>
  </div>
  <ul class="inline-flex flex-wrap items-center gap-2 pt-8 lg:pt-12">
    <li>
      <ClassifyCard collection={category} />
    </li>
    {
      tags && tags.map((tag) => (
        <li>
          <ClassifyCard collection={tag} />
        </li>
      ))
    }
  </ul>
  <p class="pt-4 text-muted-foreground font-medium tracking-wide leading-relaxed 2xl:leading-loose lg:text-[1.125rem] xl:text-[1.25rem]">{data.description}</p>
</section>